---
name: service-fabrik-broker

packages:
  - bosh-helpers
  - node
  - service-fabrik-broker
  - jq
  - yaml2json

templates:
  bin/drain.erb: bin/drain
  bin/service-fabrik-broker_ctl.erb: bin/service-fabrik-broker_ctl
  bin/job_properties.sh.erb: bin/job_properties.sh
  bin/health_check.erb: bin/health_check
  config/settings.yml.erb: config/settings.yml
  config/eventlog-config-internal.yml.erb: config/eventlog-config-internal.yml
  config/circuit-breaker-config.yml.erb: config/circuit-breaker-config.yml
provides:
- name: broker
  type: broker
  properties:
  - name
  - username
  - password
  - enable_service_fabrik_v2
  - skip_ssl_validation
  - log_level
  - enable_bosh_rate_limit
  - enable_cross_organization_sharing
  - enable_circuit_breaker
  - enable_swarm_manager
  - feature.ServiceInstanceAutoUpdate
  - feature.EnableSecurityGroupsOps
  - feature.AllowInstanceSharing
  - broker_drain_message
  - http_timeout
  - deployment_action_timeout
  - allow_concurrent_operations
  - allow_concurrent_binding_operations
  - send_binding_metadata
  - agent_operation_timeout
  - internal.internal_url
  - internal.port
  - internal.ip
  - internal.ssl
  - internal.log_event
  - internal.domain_socket.path
  - external.host
  - external.port
  - external.log_event
  - external.ssl
  - external.api_requires_admin_scope
  - external.trust_proxy
  - external.cookie_secret
  - external.session_expiry
  - mongodb.url
  - mongodb.provision.plan_id
  - mongodb.provision.network_index
  - mongodb.deployment_name
  - mongodb.retry_connect.max_attempt
  - mongodb.retry_connect.min_delay
  - mongodb.record_max_fetch_count
  - mongodb.backup.schedule_interval
  - mongodb.agent.provider.container
  - mongodb.backup.schedule_interval
  - mongodb.deployment_name
  - mongodb.agent.provider.container
  - monitoring.include_response_body
  - monitoring.events_logged_in_db
  - monitoring.unauthorized.include_response_body
  - riemann.enabled
  - riemann.show_errors
  - riemann.log_additional_event
  - riemann.http_status_codes_to_be_skipped
  - cf.url
  - cf.username
  - cf.password
  - cf.identity_provider
  - backup.retention_period_in_days
  - backup.max_num_on_demand_backup
  - backup.status_check_every
  - backup.retry_delay_on_error
  - backup.lock_check_delay_on_restart
  - backup.backup_restore_status_poller_timeout
  - backup.backup_restore_status_check_every
  - backup.abort_time_out
  - backup.consecutive_backup_failure_sla_count
  - backup.provider
  - backup.num_of_allowed_restores
  - backup.restore_history_days
  - backup.reschedule_backup_delay_after_restore
  - backup.transaction_logs_delete_buffer_time
  - docker.url
  - docker.skip_ssl_validation
  - docker.allocate_docker_host_ports
  - docker.volume_driver
  - common.tls_cacert
  - common.tls_client_cert
  - common.tls_client_key
  - riemann.host
  - riemann.port
  - riemann.prefix
  - riemann.metrics
  - syslog.host
  - syslog.port
  - sys_log_level
  - event.defaults.http_success_codes
  - event.defaults.http_inprogress_codes
  - event.defaults.log_inprogress_state
  - event.defaults.cf_last_operation
  - event.defaults.ignore_service_fabrik_operation
  - event.defaults.include_response_body
  - event.delete.http_success_codes
  - quota
  - services
  - service_addon_jobs
  - directors
  - multi_az_enabled
  - ha_enabled
  - metering.enabled
  - metering.create_metering_events
  - metering.binding.clientid
  - metering.binding.clientsecret
  - metering.binding.token_url
  - metering.binding.metering_url
  - metering.binding.region
  - metering.error_threshold_hours
consumes:
- name: scheduler
  type: scheduler
- name: deployment_hooks
  type: deployment_hooks
- name: service-fabrik-apiserver
  type: service-fabrik-apiserver
- name: quota_app
  type: quota_app
- name: admin_app
  type: admin_app


properties:
  name:
    description: "Name of the service broker as it will be registered at the Cloud Foundry cloud controller"
    default: "service-fabrik-broker"
  username:
    description: "Broker's basic auth username"
    default: "broker"
  password:
    description: "Broker's basic auth password"
    default: "secret"
  enable_service_fabrik_v2:
    description: "Determines whether to enable service fabrik v20"
    default: false
  skip_ssl_validation:
    description: "Determines whether the broker should verify SSL certificates when communicating with other endpoints such as the cloud controller or the UAA"
    default: true
  log_level:
    description: "Log level of the broker"
    default: "info"
  sys_log_level:
    description: "Log level of the messages that are to be forwarded to ELK via syslog transport"
    default: "info"
  enable_circuit_breaker:
    description: "Switch used to turn on/off circuit breaker"
    default: false
  enable_bosh_rate_limit:
    description: "Switch used to turn on/off rate limiting against BOSH director"
    default: false
  enable_cross_organization_sharing:
    description: "Determines whether instances can be shared across CF organizations"
    default: false
  enable_swarm_manager:
    description: "Determines whether the broker has dependency on swarm manager"
    default: true
  feature.ServiceInstanceAutoUpdate:
    description: "Switch used to turn on/off schedule update feature"
    default: false
  feature.EnableSecurityGroupsOps:
    description: "Switch used to enable security groups related operations"
    default: true
  feature.AllowInstanceSharing:
    description: "Switch used to turn on/off sharing instances on CF"
    default: true
  http_timeout:
    description: "Timeout duration for any request to broker"
    default: 175000
  deployment_action_timeout:
    description: "Timeout duration for deployment hook actions"
    default: 80000
  agent_operation_timeout:
    description: "(milliseconds) Timeout duration for any operation done on broker agent"
    default: 35000
  multi_az_enabled:
    description: "Switch used to turn on/off the multi-az support"
    default: false
  ha_enabled:
    description: "Switch used to turn on/off the HA support"
    default: false
  broker_drain_message:
    description: "Drain message that is updated into broker maintenance state. If undefined, then during drain maintenance state is not updated"
    default: "BROKER_DRAIN_INITIATED"
  allow_concurrent_operations:
    description: "When set to true, it will disable the check for parallel create/update/delete operation of the service instance"
    default: true
  allow_concurrent_binding_operations:
    description: "When set to true, it will disable the check for parallel binding/unbinding operation during any OSB operation"
    default: true
  send_binding_metadata:
    description: "When set to false, any metadata will be omitted from the create_binding response. To be used when metadata contains sensitive information"
    default: true
  
  external.port:
    description: "Port used for external endpoints such as dashboards or the Service Fabrik API"
    default: 9292
  external.host:
    description: "Domain name used for external endpoints such as dashboards or the Service Fabrik API (will be registered at the router)"
  external.trust_proxy:
    description: "This is required when running an Express app behind a proxy (see http://expressjs.com/en/guide/behind-proxies.html)"
    default: 2
  external.cookie_secret:
    description: "Unique secret key, used to sign sessions"
  external.session_expiry:
    description: "Session expiry time of the session in seconds"
    default: 86400
  external.api_requires_admin_scope:
    description: "Only Administrators of the Cloud Foundry cloud controller are allowed to use the Service Fabrik API endpoint"
    default: false
  external.log_event:
    description: "Determines whether event logging must be enabled or not"
    default: true
  external.ssl:
    description: "Private key used for external communication"

  internal.internal_url:
    description: "Domain name used for internal endpoints such as administration or the service broker API"
  internal.port:
    description: "Port used for internal endpoints such as administration or the service broker API"
    default: 9443
  internal.ip:
    description: "IP address used for internal endpoints such as administration or the service broker API"
  internal.ssl.key:
    description: "Private key used for internal communication"
  internal.ssl.cert:
    description: "Signed certificate used for internal communication"
  internal.ssl.ca:
    description: "CA for internal app SSL certificate"
  internal.log_event:
    description: "Determines whether event logging must be enabled or not"
    default: true
  internal.domain_socket.path:
    description: "domain socket path used to communicate with broker monitoring agent"
    default: /tmp/sfevents
  lockttl.lifecycle:
    description: "LockTTL in seconds for lifecycle operations create, update, delete"
    default: 86400
  lockttl.backup:
    description: "LockTTL in seconds for backup operation"
    default: 86400
  lockttl.restore:
    description: "LockTTL in seconds for restore operation"
    default: 86400
  mongodb.url:
    description: "MongoDB connection URL for service-fabrik's internal needs. ex : mongodb://user:pass@localhost:port/database"
  mongodb.record_max_fetch_count:
    description: "Max number of records that can be fetched at a time from DB"
    default: 300
  mongodb.provision.plan_id:
    description: "Mongo Plan Id from the service catalog which is to be used for provisioning internal mongodb by Fabrik"
  mongodb.provision.network_index:
    description: "Network segment index within the service fabrik network where the internal mongodb is to be provisioned"
    default: 1
  mongodb.deployment_name:
    description: "Bosh deployment name of the internal mongo-db"
    default: "service-fabrik-mongodb"
  mongodb.retry_connect.max_attempt:
    description: "Maximum retry attempts for connecting to DB on errors"
    default: 8
  mongodb.retry_connect.min_delay:
    description: "Minimum delay before retry attempt to connect to DB"
    default: 120000
  mongodb.backup.schedule_interval:
    description: "Cron expression defining the backup interval for service fabrik's internal mongodb's backup job"
  mongodb.agent.provider.container:
    description: "S3/Swift container name where service fabrik's mongodb backup blobs will be stored"

  backup.retention_period_in_days:
    description: "Scheduled backups are going to be maintained during this period & cannot be deleted. Beyond this period backups are automatically deleted by backup job"
    default: 14
  backup.max_num_on_demand_backup:
    description: "Maximum number of on-demand backups"
    default: 2
  backup.retry_delay_on_error:
    description: "In case of unlock failure 3 retry attempts will be done with this configured delay (milliseconds) in exponential manner"
    default: 60000
  backup.lock_check_delay_on_restart:
    description: "On restart of service fabrik queries all deployments to see if there is a lock on it. This delay ensures each call is spaced with this delay (ms)"
    default: 5000
  backup.backup_restore_status_poller_timeout:
    description: "Timeout for backup/restore status checker in ms"
    default: 86400000
  backup.backup_restore_status_check_every:
    description: "Status of deployment backup/restore once in every ms"
    default: 120000
  backup.abort_time_out:
    description: "Timeout time for abort of backup to complete in ms (defaults to 5 mins)"
    default: 300000
  backup.consecutive_backup_failure_sla_count:
    description: "Max allowed no backup days in a row (defaults to 3 days)"
    default: 3
  backup.provider:
    description: "IaaS-specific backup provider configuration"
  backup.status_check_every:
    description: "Interval in milliseconds to check the status of service fabrik backup"
    default: 120000
  backup.num_of_allowed_restores:
    description: "Number of allowed restore in backup.restore_history_days"
    default: 10
  backup.restore_history_days:
    description: "Number days to consider for restore quota check"
    default: 30
  backup.reschedule_backup_delay_after_restore:
    description: "Delay to reschedule backup after restore in minutes"
    default: 3
  backup.transaction_logs_delete_buffer_time:
    description: "Delete transaction logs older than latest successful backup + this buffer time in minutes"
    default: 30

  cf.url:
    description: "URL of the Cloud Foundry cloud controller"
  cf.username:
    description: "Admin username for the Cloud Foundry cloud controller"
  cf.password:
    description: "Admin password for the Cloud Foundry cloud controller"
  cf.identity_provider:
    description: "Identity provider for the Cloud Foundry cloud controller"

  docker.job:
    description: "Name of the swarm/docker job"
    default: "swarm_manager"
  docker.url:
    description: "Docker URL (HTTP address or Unix socket)"
    default: "https://10.11.252.10:2376"
  docker.allocate_docker_host_ports:
    description: "Allocate Docker host ports when creating a container"
    default: true
  docker.volume_driver:
    description: "Volume driver used for Docker containers (only local or lvm-volume-driver are currently supported)"
    default: "local"
  docker.skip_ssl_validation:
    description: "Determines whether the broker should verify SSL certificates when communicating with the Swarm Manager"
    default: true
  common.tls_cacert:
    description: "Trust only remotes providing a certificate signed by the CA given here"
  common.tls_client_cert:
    description: "TLS certificate file"
  common.tls_client_key:
    description: "TLS key file"

  service_addon_jobs:
    description: "Add on jobs that will be added onto the services deployment"
    default: ['iptables-manager']

  directors:
    description: "URL of the Bosh directors"

  services:
    description: "Services and plans offered by the broker"

  monitoring.event_name_prefix:
    description: "All riemann events originating from service fabrik will have this prefix"
    default: CF.service-fabrik
  monitoring.events_logged_in_db:
    description: "Comma seperated list of event names that are to be logged in DB"
    default: "create_backup, update_instance"
  monitoring.include_response_body:
    description: "Determines if the riemann event should contain the HTTP method response while logging"
    default: false
  monitoring.unauthorized.include_response_body:
    description: "Determines if the unauthorized event should contain the HTTP method response while logging"
    default: true

  riemann.enabled:
    description: "Determines whether events should be forwarded to Riemann"
    default: true
  riemann.host:
    description: "Riemann Host IP"
    default: "10.1.3.1"
  riemann.port:
    description: "Riemann Port"
    default: 5555
  riemann.show_errors:
    description: "Determines whether Riemann errors are to be logged or not"
    default: true
  riemann.prefix:
    description: "Riemann Prefix"
    default: "CF"
  riemann.log_additional_event:
    description: "Boolean configuration to log additional event to Riemann"
    default: true
  riemann.http_status_codes_to_be_skipped:
    description: "Broker events with http response codes matching this list will be skipped from logging to riemann"
    default: [400, 409]

  syslog.host:
    description: "Syslog ingestor host IP of ELK stack"
    default: "10.1.4.3"
  syslog.port:
    description: "Syslog ingestor Port"
    default: 5514

  event.defaults.http_success_codes:
    description: "Defines the default HTTP success codes"
    default: [200, 201]
  event.defaults.http_inprogress_codes:
    description: "Defines the default in progress HTTP status codes"
    default: [202]
  event.defaults.log_inprogress_state:
    description: "Determines if an in-progress event is to be logged or not"
    default: true
  event.defaults.cf_last_operation:
    description: "Determines if an HTTP operation is to be additionally treated with cf-last operation semantics"
    default: false
  event.defaults.ignore_service_fabrik_operation:
    description: "Determines if a broker API is being invoked via service fabrik API operation"
    default: false
  event.defaults.include_response_body:
    description: "Determines wheter HTTP response body is to be logged or not"
    default: false
  event.delete.http_success_codes:
    description: "Defines the HTTP success codes for Delete operation"
    default: [200, 410]

  quota.enabled:
    description: "If Quota Management Service is enabled"
    default: false
  quota.whitelist:
    description: "List of whitelisted organitions for which quota check should not happen"
  quota.oauthDomain:
    description: "Oauth domain for quota service"
  quota.serviceDomain:
    description: "Onboarding Service domain for quota service"
  quota.username:
    description: "clientId for quota service"
  quota.password:
    description: "Client secret for quota service"

  circuit_breaker:
    description: "Overridden circuit breaker configuration"

  metering.enabled:
    description: "True if metering in enabled"
    default: false
  metering.create_metering_events:
    description: "Create sfevents crds"
    default: true
  metering.binding.clientid:
    description: "The client id provided by the metering service"
  metering.binding.clientsecret:
    description: "The client secret provided by the metering service"
  metering.binding.token_url:
    description: "The token url provided by the metering service"
  metering.binding.metering_url:
    description: "The metering url provided by the metering service"
  metering.binding.region:
    description: "The region provided by the metering binding"
  metering.error_threshold_hours:
    description: "Time in hours after which an error in sending to MaaS is reported to Riemann"
