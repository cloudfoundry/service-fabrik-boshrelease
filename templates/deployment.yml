---
name: service-fabrik

update:
  canaries: 1         # safer but slower: watch one machine closely at first
  canary_watch_time: 1000-60000
  update_watch_time: 1000-60000
  max_in_flight: 1 # update the rest one by one
  serial: true        # update docker jobs before broker job that runs swarm;
                      # see swarm discovery issue (depending on that order):
                      # https://github.com/cf-platform-eng/docker-boshrelease/issues/35
stemcells:
- alias: default
  os: ubuntu-trusty
  version: latest

instance_groups:
- name: broker
  instances: 1
  networks:
  - name: default
  stemcell: default
  vm_type: service_fabrik_vm_medium
  azs: [z1]
  jobs:
  - name: service-fabrik-apiserver
    release: service-fabrik
    properties:
      admin-username: admin
      admin-password: admin
      backend_port: default # Bosh links hack
      ip: default
      port: default
      etcd:
        url: default
        ssl:
          ca: ((tls_etcd.ca))
          crt: ((tls_etcd.certificate))
          key: ((tls_etcd.private_key))
      tls: 
        apiserver:
          ca: ((tls_etcd.ca))
          certificate: ((tls_apiserver.certificate))
          private_key: ((tls_apiserver.private_key))
      crds: placeholder
  - name: bpm
    release: bpm
  - name: service-fabrik-backup-manager
    release: service-fabrik
  - name: service-fabrik-bosh-manager
    release: service-fabrik
  - name: service-fabrik-docker-manager
    release: service-fabrik
  - name: service-fabrik-virtualhost-manager
    release: service-fabrik
  - name: service-fabrik-broker
    release: service-fabrik
    consumes:
      nats-tls:
        from: nats-tls
        deployment: cf
    properties:
      name: service-fabrik-broker
      username: default
      password: default
      skip_ssl_validation: true
      log_level: debug
      common:
        tls_cacert: ((common.tls_cacert))
        tls_client_cert: ((common.tls_client_cert))
        tls_client_key: ((common.tls_client_key))
      internal:
        ip: default
        log_event: true
        port: default
        ssl:
          cert: ((ssl.cert))
          key: ((ssl.key))
      external:
        api_requires_admin_scope: false
        cookie_secret: default
        host: ((broker_host))
        log_event: true
        port: default
        trust_proxy: 2
      mongodb:
        agent:
          auth:
            password: default
            username: default
          provider:
            container: default
          supported_features:
          - state
          - lifecycle
          - credentials
          - backup
          - restore
          version: "1"
        backup:
          backup_timeout_time: default
          schedule_interval: default
          status_check_every: 120000
        deployment_name: service-fabrik-mongodb
        provision:
          network_index: 1
        record_max_fetch_count: 100
        retry_connect:
          max_attempt: 8
          min_delay: 120000
      cf:
        password: default
        url: ((cf_url))
        username: default
        identity_provider: uaa
      syslog:
        host: default
        port: default
      docker:
        allocate_docker_host_ports: true
        url: default
      quota:
        whitelist: null
        oauthDomain: null
        serviceDomain: null
        username: null
        password: null
      directors:
      - default_task_poll_interval: 10000
        infrastructure:
          azs:
          - cloud_properties:
              name: random
            name: z1
          - cloud_properties:
              name: random
            name: z2
          - cloud_properties:
              name: random
            name: z3
          compilation:
            cloud_properties:
              name: random
            network: compilation
            reuse_compilation_vms: true
            workers: 4
          networks:
          - name: sf_bosh_services
            subnets: default
            type: manual
          - name: compilation
            type: dynamic
          segmentation:
            capacity: -1
            network_name: sf_bosh_services
            offset: 1
            size: 8
          stemcell:
            alias: default
            os: ubuntu-trusty
            version: latest
        lock_deployment_max_duration: 86400
        name: bosh
        password: default
        primary: true
        skip_ssl_validation: true
        support_create: true
        url: default
        username: default
      services: default
      riemann:
        host: example
        metrics: metrics
        port: 5555
        prefix: CF
      backup:
        backup_restore_status_check_every: 120000
        backup_restore_status_poller_timeout: 86400000
        max_num_on_demand_backup: 2
        num_of_allowed_restores: 10
        restore_history_days: 30
        reschedule_backup_delay_after_restore: 3
        provider:
          authUrl: null
          container: null
          keystoneAuthVersion: null
          name: openstack
          password: null
          projectDomainName: null
          region: null
          strictSSL: false
          tenantId: null
          username: null
        retention_period_in_days: 14
      nats:
        machines: default
        port: default
        tls:
          enabled: true
          client_cert: "(( .context.imports.cf.internal.nats.tls.client_cert ))"
          client_key: "(( .context.imports.cf.internal.nats.tls.client_key))"
      route_registrar:
        routes:
        - health_check:
            name: service-fabrik-broker-health-check
            script_path: /var/vcap/jobs/service-fabrik-broker/bin/health_check
            timeout: 5s
        name: service-fabrik-broker
        port: 9292
        registration_interval: 20s
        tags:
          component: service-fabrik-broker
          env: production
        uris:
        - service-fabrik-broker.bosh-lite.com

  - name: service-fabrik-scheduler
    release: service-fabrik
    properties:
      agenda_collection: agendaJobs
      default_concurrency: 20
      default_lock_lifetime: 900000
      job_history_retention_in_days: 30
      job_types: ScheduledBackup, ServiceFabrikBackup, ScheduledOobDeploymentBackup, OperationStatusPoller
      max_concurrency: 50
      process_every: 3 minutes
  - name: service-fabrik-report
    release: service-fabrik
    properties:
      report:
        ip: default
        ssl:
          cert: ((ssl.cert))
          key: ((ssl.key))
  - name: service-fabrik-deployment-hooks
    release: service-fabrik
    properties:
      actions: default
      hook:
        ip: default
        ssl:
          cert: ((ssl.cert))
          key: ((ssl.key))
  - name: swarm_manager
    release: service-fabrik
    properties:
      swarm:
        discovery: default
        tls: true
        tls_cert: ((swarm.tls_cert))
        tls_key: ((swarm.tls_key))
        tls_verify: true
      common:
        tls_cacert: ((common.tls_cacert))
  - name: route_registrar
    release: routing
    consumes:
      nats-tls:
        from: nats-tls
        deployment: cf
    properties:
      route_registrar:
        routes:
        - health_check:
            name: service-fabrik-broker-health-check
            script_path: /var/vcap/jobs/service-fabrik-broker/bin/health_check
            timeout: 5s
          name: service-fabrik-broker
          port: 9292
          registration_interval: 20s
          tags:
            component: service-fabrik-broker
            env: production
          uris:
          - service-fabrik-broker.bosh-lite.com
      nats:
        machines: default	          
        port: default
        tls:
          enabled: true
          client_cert: "(( .context.imports.cf.internal.nats.tls.client_cert ))"
          client_key: "(( .context.imports.cf.internal.nats.tls.client_key))"
- name: docker
  instances: 1
  networks:
  - name: default
  stemcell: default
  vm_type: service_fabrik_vm_medium
  azs: [z1]
  persistent_disk_type: service_fabrik_hdd_100gb
  jobs:
  - name: docker
    release: service-fabrik
    properties:
      docker:
        icc: true
        tcp_address: 0.0.0.0
        tls: true
        tls_cert: ((docker.tls_cert))
        tls_key: ((docker.tls_key))
        tls_verify: true
        ulimit:
          nofile: 1000000
      common:
        tls_cacert: ((common.tls_cacert))
      lvmvd:
        disabled: true
releases:
- name: routing
  version: latest
- name: service-fabrik
  version: latest
- name: bpm
  version: latest
